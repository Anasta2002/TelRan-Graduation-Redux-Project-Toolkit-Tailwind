{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { root_url } from '../../global';\nconst initialState = {\n  list: JSON.parse(localStorage.getItem('products')) || []\n};\nexport const fetchProducts = createAsyncThunk('Products/fetchProducts', async () => {\n  const response = await fetch(`${root_url}products/all`);\n  const data = await response.json();\n  const products = data.map(el => ({\n    ...el,\n    show_product: true\n  }));\n  return products;\n});\nconst products_slice = createSlice({\n  name: 'products',\n  initialState,\n  reducers: {\n    sortProductsAction(state, action) {\n      if (action.payload === 'default') {\n        state.list.sort((a, b) => a.id - b.id);\n      } else if (action.payload === 'title') {\n        state.list.sort((a, b) => a.title.localeCompare(b.title));\n      } else if (action.payload === 'price_low') {\n        state.list.sort((a, b) => a.price - b.price);\n      } else if (action.payload === 'price_high') {\n        state.list.sort((a, b) => b.price - a.price);\n      }\n    },\n    filterProductsAction(state, action) {\n      const {\n        min_value,\n        max_value\n      } = action.payload;\n      state.list = state.list.map(el => {\n        const actual_price = el.discont_price ? el.discont_price : el.price;\n        if (actual_price >= min_value && actual_price <= max_value) {\n          return {\n            ...el,\n            show_product: true\n          };\n        } else {\n          return {\n            ...el,\n            show_product: false\n          };\n        }\n      });\n    },\n    getCheapProductAction(state, action) {\n      if (action.payload) {\n        state.list = state.list.map(el => {\n          if (!el.discont_price) {\n            return {\n              ...el,\n              show_product: false\n            };\n          }\n          return el;\n        });\n      } else {\n        state.list = state.list.map(el => {\n          return {\n            ...el,\n            show_product: true\n          };\n        });\n      }\n    },\n    clearAllFilters(state) {\n      state.list = state.list.map(el => {\n        return {\n          ...el,\n          show_product: true\n        };\n      });\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchProducts.pending, state => {\n      //pending\n      state.status = 'loading';\n    }).addCase(fetchProducts.fulfilled, (state, action) => {\n      //success\n      state.status = 'ready';\n      state.list = action.payload;\n    }).addCase(fetchProducts.rejected, state => {\n      //rejected\n      state.status = 'error';\n    });\n  }\n});\nexport default products_slice.reducer;\nexport const {\n  sortProductsAction,\n  filterProductsAction,\n  getCheapProductAction,\n  clearAllFilters\n} = products_slice.actions;\nexport const selectProductsStatus = state => state.products.status;","map":{"version":3,"names":["createAsyncThunk","createSlice","root_url","initialState","list","JSON","parse","localStorage","getItem","fetchProducts","response","fetch","data","json","products","map","el","show_product","products_slice","name","reducers","sortProductsAction","state","action","payload","sort","a","b","id","title","localeCompare","price","filterProductsAction","min_value","max_value","actual_price","discont_price","getCheapProductAction","clearAllFilters","extraReducers","builder","addCase","pending","status","fulfilled","rejected","reducer","actions","selectProductsStatus"],"sources":["/Users/anastasiakobyzeva/Documents/GitHub/TelRan-Graduation-Redux-Project-Toolkit-Tailwind/src/store/slices/products_slice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { root_url } from '../../global'\n\nconst initialState = {\n    list: JSON.parse(localStorage.getItem('products')) || [],\n}\n\nexport const fetchProducts = createAsyncThunk(\n    'Products/fetchProducts',\n    async () => {\n        const response = await fetch(`${root_url}products/all`);\n        const data = await response.json();\n        const products = data.map(el => ({...el, show_product: true}))\n        return products;\n    }\n)\n\nconst products_slice = createSlice({\n    name: 'products',\n    initialState,\n    reducers: {\n        sortProductsAction(state, action) {\n            if (action.payload === 'default') {\n                state.list.sort((a, b) => a.id - b.id)\n            } else if (action.payload === 'title') {\n                state.list.sort((a, b) => a.title.localeCompare(b.title))\n            } else if (action.payload === 'price_low') {\n                state.list.sort((a, b) => a.price - b.price)\n            } else if (action.payload === 'price_high') {\n                state.list.sort((a, b) => b.price - a.price)\n            }\n        },\n        filterProductsAction(state, action) {\n            const { min_value, max_value } = action.payload;\n            state.list = state.list.map((el) => {\n                const actual_price = el.discont_price ? el.discont_price : el.price\n                if (actual_price >= min_value && actual_price <= max_value) {\n                    return { ...el, show_product: true }\n                } else {\n                    return { ...el, show_product: false }\n                }\n            });\n        },\n        getCheapProductAction(state, action) {\n            if (action.payload) {\n                state.list = state.list.map(el => {\n                    if (!el.discont_price) {\n                        return { ...el, show_product: false }\n                    }\n                    return el;\n                });\n            } else {\n                state.list = state.list.map(el => {\n                    return { ...el, show_product: true }\n                });\n            }\n        },\n        clearAllFilters(state) {\n            state.list = state.list.map(el => {\n                return { ...el, show_product: true }\n            });\n        }\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchProducts.pending, (state) => {    //pending\n                state.status = 'loading'\n            })\n            .addCase(fetchProducts.fulfilled, (state, action) => {   //success\n                state.status = 'ready'\n                state.list = action.payload\n            })\n            .addCase(fetchProducts.rejected, (state) => {   //rejected\n                state.status = 'error'\n            })\n    }\n})\n\nexport default products_slice.reducer;\nexport const { sortProductsAction, filterProductsAction, getCheapProductAction, clearAllFilters } = products_slice.actions;\nexport const selectProductsStatus = (state) => state.products.status;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}