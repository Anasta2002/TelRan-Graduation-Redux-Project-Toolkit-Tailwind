{"ast":null,"code":"const LOAD_PRODUCTS = 'LOAD_PRODUCTS';\n// const SORT_PRODUCTS_CATEGORIES = 'SORT_PRODUCTS_CATEGORIES'\n// const FILTER_PRODUCTS_CATEGORIES = 'FILTER_PRODUCTS_CATEGORIES'\n// const GET_CHEAP_PRODUCT_CATEGORIES = 'GET_CHEAP_PRODUCT_CATEGORIES'\n\nexport const loadProductsByCategoryAction = payload => ({\n  type: LOAD_PRODUCTS,\n  payload\n});\n// export const sortProductsCategoryAction = payload => ({type: SORT_PRODUCTS_CATEGORIES, payload})\n// export const filterProductsCategoryAction = payload => ({type: FILTER_PRODUCTS_CATEGORIES, payload})\n// export const getCheapProductCategoryAction = payload => ({type: GET_CHEAP_PRODUCT_CATEGORIES, payload})\n\nexport const products_by_category_reducer = (state = {}, action) => {\n  if (action.type === LOAD_PRODUCTS) {\n    return action.payload;\n    // return action.payload.data.map(el => ({...el, show_product: true}))\n  }\n  // else if (action.type === SORT_PRODUCTS_CATEGORIES) {\n  //     if (action.payload === 'default') {\n  //         console.log(state.data)\n  //         state.sort((a, b) => a.id-b.id)\n  //     } else if(action.payload === 'title') {\n  //         state.sort((a, b) => a.title.localeCompare(b.title))\n  //     } else if (action.payload === 'price_low') {\n  //         state.sort((a, b) => a.price-b.price)\n  //     } else if (action.payload === 'price_high') {\n  //         state.sort((a, b) => b.price-a.price)\n  //     } \n  //     return [...state]\n  // } else if (action.type === FILTER_PRODUCTS_CATEGORIES) {\n  //     const { min_value, max_value } = action.payload;\n  //     return state.map(el => {\n  //         if(el.price >= min_value && el.price <= max_value ) {\n  //             el.show_product = true\n  //         } else {\n  //             el.show_product = false\n  //         } \n  //         return el\n  //     })  \n  // } else if(action.type === GET_CHEAP_PRODUCT_CATEGORIES) {\n  //     if(action.payload) {\n  //         return state.map(el => {\n  //             if(el.price > 100) {\n  //                 el.show_product = false\n  //             } \n  //             return el\n  //         })\n  //     } else {\n  //         return state.map(el => {\n  //             el.show_product = true\n  //             return el\n  //         })\n  //     }\n  // }\n  else return state;\n};","map":{"version":3,"names":["LOAD_PRODUCTS","loadProductsByCategoryAction","payload","type","products_by_category_reducer","state","action"],"sources":["/Users/anastasiakobyzeva/Desktop/ReactTest/ProjectTelRun/2808nelly/src/store/products_by_category_reducer/products_by_category_reducer.js"],"sourcesContent":["const LOAD_PRODUCTS = 'LOAD_PRODUCTS'\n// const SORT_PRODUCTS_CATEGORIES = 'SORT_PRODUCTS_CATEGORIES'\n// const FILTER_PRODUCTS_CATEGORIES = 'FILTER_PRODUCTS_CATEGORIES'\n// const GET_CHEAP_PRODUCT_CATEGORIES = 'GET_CHEAP_PRODUCT_CATEGORIES'\n\nexport const loadProductsByCategoryAction = payload => ({type: LOAD_PRODUCTS, payload}) \n// export const sortProductsCategoryAction = payload => ({type: SORT_PRODUCTS_CATEGORIES, payload})\n// export const filterProductsCategoryAction = payload => ({type: FILTER_PRODUCTS_CATEGORIES, payload})\n// export const getCheapProductCategoryAction = payload => ({type: GET_CHEAP_PRODUCT_CATEGORIES, payload})\n\nexport const products_by_category_reducer = (state = {}, action) => {\n    if (action.type === LOAD_PRODUCTS) {\n        return action.payload\n        // return action.payload.data.map(el => ({...el, show_product: true}))\n    } \n    // else if (action.type === SORT_PRODUCTS_CATEGORIES) {\n    //     if (action.payload === 'default') {\n    //         console.log(state.data)\n    //         state.sort((a, b) => a.id-b.id)\n    //     } else if(action.payload === 'title') {\n    //         state.sort((a, b) => a.title.localeCompare(b.title))\n    //     } else if (action.payload === 'price_low') {\n    //         state.sort((a, b) => a.price-b.price)\n    //     } else if (action.payload === 'price_high') {\n    //         state.sort((a, b) => b.price-a.price)\n    //     } \n    //     return [...state]\n    // } else if (action.type === FILTER_PRODUCTS_CATEGORIES) {\n    //     const { min_value, max_value } = action.payload;\n    //     return state.map(el => {\n    //         if(el.price >= min_value && el.price <= max_value ) {\n    //             el.show_product = true\n    //         } else {\n    //             el.show_product = false\n    //         } \n    //         return el\n    //     })  \n    // } else if(action.type === GET_CHEAP_PRODUCT_CATEGORIES) {\n    //     if(action.payload) {\n    //         return state.map(el => {\n    //             if(el.price > 100) {\n    //                 el.show_product = false\n    //             } \n    //             return el\n    //         })\n    //     } else {\n    //         return state.map(el => {\n    //             el.show_product = true\n    //             return el\n    //         })\n    //     }\n    // }\n    else return state\n}"],"mappings":"AAAA,MAAMA,aAAa,GAAG,eAAe;AACrC;AACA;AACA;;AAEA,OAAO,MAAMC,4BAA4B,GAAGC,OAAO,KAAK;EAACC,IAAI,EAAEH,aAAa;EAAEE;AAAO,CAAC,CAAC;AACvF;AACA;AACA;;AAEA,OAAO,MAAME,4BAA4B,GAAGA,CAACC,KAAK,GAAG,CAAC,CAAC,EAAEC,MAAM,KAAK;EAChE,IAAIA,MAAM,CAACH,IAAI,KAAKH,aAAa,EAAE;IAC/B,OAAOM,MAAM,CAACJ,OAAO;IACrB;EACJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA,KACK,OAAOG,KAAK;AACrB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}