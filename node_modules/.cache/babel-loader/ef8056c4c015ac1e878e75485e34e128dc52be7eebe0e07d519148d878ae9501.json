{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { root_url } from '../../global';\nconst initialState = {\n  list: [],\n  category: ''\n};\nexport const fetchProductByCategory = createAsyncThunk('ProductByCategory/fetchProductByCategory', async id => {\n  const response = await fetch(`${root_url}categories/${id}`);\n  const data = await response.json();\n  return data;\n});\nconst productByCategory_slice = createSlice({\n  name: 'products',\n  initialState,\n  reducers: {\n    sortProductCategory(state, action) {\n      if (action.payload === 'default') {\n        state.list.data.sort((a, b) => a.id - b.id);\n      } else if (action.payload === 'title') {\n        state.list.data.sort((a, b) => a.title.localeCompare(b.title));\n      } else if (action.payload === 'price_low') {\n        state.list.data.sort((a, b) => a.price - b.price);\n      } else if (action.payload === 'price_high') {\n        state.list.data.sort((a, b) => b.price - a.price);\n      }\n    },\n    filterProductCategory(state, action) {\n      const {\n        min_value,\n        max_value\n      } = action.payload;\n      state.list.data = state.list.data.map(el => {\n        if (el.price >= min_value && el.price <= max_value) {\n          el.show_product = true;\n        } else {\n          el.show_product = false;\n        }\n        return el;\n      });\n    },\n    getCheapProductCategory(state, action) {\n      if (action.payload) {\n        state.list = state.list.map(el => {\n          if (!el.discont_price) {\n            return {\n              ...el,\n              show_product: false\n            };\n          }\n          return el;\n        });\n      } else {\n        state.list = state.list.map(el => {\n          return {\n            ...el,\n            show_product: true\n          };\n        });\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchProductByCategory.pending, state => {\n      //pending\n      state.status = 'loading';\n    }).addCase(fetchProductByCategory.fulfilled, (state, action) => {\n      //success\n      state.status = 'ready';\n      state.category = action.payload.category;\n      state.list = action.payload.data.map(el => ({\n        ...el,\n        show_product: true\n      }));\n    }).addCase(fetchProductByCategory.rejected, state => {\n      //rejected\n      state.status = 'error';\n    });\n  }\n});\nexport default productByCategory_slice.reducer;\nexport const {\n  sortProductCategory,\n  filterProductCategory,\n  getCheapProductCategory\n} = productByCategory_slice.actions;\nexport const selectProductsStatus = state => state.productByCategory_slice.status;","map":{"version":3,"names":["createAsyncThunk","createSlice","root_url","initialState","list","category","fetchProductByCategory","id","response","fetch","data","json","productByCategory_slice","name","reducers","sortProductCategory","state","action","payload","sort","a","b","title","localeCompare","price","filterProductCategory","min_value","max_value","map","el","show_product","getCheapProductCategory","discont_price","extraReducers","builder","addCase","pending","status","fulfilled","rejected","reducer","actions","selectProductsStatus"],"sources":["/Users/anastasiakobyzeva/Documents/GitHub/TelRan-Graduation-Redux-Project-Toolkit-Tailwind/src/store/slices/productByCategory_slice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\nimport { root_url } from '../../global'\n\nconst initialState = {\n    list: [],\n    category: '',\n}\n\nexport const fetchProductByCategory = createAsyncThunk(\n    'ProductByCategory/fetchProductByCategory',\n    async (id) => {\n        const response = await fetch(`${root_url}categories/${id}`);\n        const data = await response.json();\n        return data;\n    }\n)\n\nconst productByCategory_slice = createSlice({\n    name: 'products',\n    initialState,\n    reducers: {\n        sortProductCategory(state, action) {\n            if (action.payload === 'default') {\n                state.list.data.sort((a, b) => a.id - b.id);\n            } else if (action.payload === 'title') {\n                state.list.data.sort((a, b) => a.title.localeCompare(b.title));\n            } else if (action.payload === 'price_low') {\n                state.list.data.sort((a, b) => a.price - b.price);\n            } else if (action.payload === 'price_high') {\n                state.list.data.sort((a, b) => b.price - a.price);\n            }\n        },\n        filterProductCategory(state, action) {\n            const { min_value, max_value } = action.payload;\n            state.list.data = state.list.data.map((el) => {\n                if (el.price >= min_value && el.price <= max_value) {\n                    el.show_product = true\n                } else {\n                    el.show_product = false\n                }\n                return el\n            })\n        },\n        getCheapProductCategory(state, action) {\n            if (action.payload) {\n                state.list = state.list.map(el => {\n                    if (!el.discont_price) {\n                        return { ...el, show_product: false };\n                    }\n                    return el;\n                });\n            } else {\n                state.list = state.list.map(el => {\n                    return { ...el, show_product: true };\n                });\n            }\n        },\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchProductByCategory.pending, (state) => {    //pending\n                state.status = 'loading'\n            })\n            .addCase(fetchProductByCategory.fulfilled, (state, action) => {   //success\n                state.status = 'ready'\n                state.category = action.payload.category\n                state.list = action.payload.data.map(el => ({...el, show_product: true}))\n            })\n            .addCase(fetchProductByCategory.rejected, (state) => {   //rejected\n                state.status = 'error'\n            })\n    }\n})\n\nexport default productByCategory_slice.reducer;\nexport const { sortProductCategory, filterProductCategory, getCheapProductCategory } = productByCategory_slice.actions;\nexport const selectProductsStatus = (state) => state.productByCategory_slice.status;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}