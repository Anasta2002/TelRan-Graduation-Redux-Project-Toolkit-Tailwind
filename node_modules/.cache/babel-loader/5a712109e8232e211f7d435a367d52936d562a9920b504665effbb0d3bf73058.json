{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { root_url } from '../../global';\n\n// const initialState = {\n//     list: [],\n// }\n\nexport const fetchProduct = createAsyncThunk('Product/fetchProduct', async id => {\n  const response = await fetch(`${root_url}products/${id}`);\n  const product = await response.json();\n  return product;\n});\nconst product_slice = createSlice({\n  name: 'product',\n  initialState: [],\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchProduct.pending, state => {\n      //pending\n      state.status = 'loading';\n    }).addCase(fetchProduct.fulfilled, (state, action) => {\n      //success\n      state.status = 'ready';\n      state = [action.payload];\n    }).addCase(fetchProduct.rejected, state => {\n      //rejected\n      state.status = 'error';\n    });\n  }\n});\nexport default product_slice.reducer;\nexport const selectProductStatus = state => state.product.status;","map":{"version":3,"names":["createAsyncThunk","createSlice","root_url","fetchProduct","id","response","fetch","product","json","product_slice","name","initialState","reducers","extraReducers","builder","addCase","pending","state","status","fulfilled","action","payload","rejected","reducer","selectProductStatus"],"sources":["/Users/anastasiakobyzeva/Desktop/ReactTest/ProjectTelRunToolkit/2808nelly/src/store/slices/product_slice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { root_url } from '../../global'\n\n// const initialState = {\n//     list: [],\n// }\n\nexport const fetchProduct = createAsyncThunk(\n    'Product/fetchProduct',\n    async (id) => {\n        const response = await fetch(`${root_url}products/${id}`);\n        const product = await response.json();\n        return product;\n    }\n)\n\nconst product_slice = createSlice({\n    name: 'product',\n    initialState: [],\n    reducers: {\n        \n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchProduct.pending, (state) => {    //pending\n                state.status = 'loading'\n            })\n            .addCase(fetchProduct.fulfilled, (state, action) => {   //success\n                state.status = 'ready'\n                state = [action.payload];\n            })\n            .addCase(fetchProduct.rejected, (state) => {   //rejected\n                state.status = 'error'\n            })\n    }\n})\n\nexport default product_slice.reducer;\nexport const selectProductStatus = (state) => state.product.status;"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,SAASC,QAAQ,QAAQ,cAAc;;AAEvC;AACA;AACA;;AAEA,OAAO,MAAMC,YAAY,GAAGH,gBAAgB,CACxC,sBAAsB,EACtB,MAAOI,EAAE,IAAK;EACV,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,QAAS,YAAWE,EAAG,EAAC,CAAC;EACzD,MAAMG,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EACrC,OAAOD,OAAO;AAClB,CACJ,CAAC;AAED,MAAME,aAAa,GAAGR,WAAW,CAAC;EAC9BS,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE,CAEV,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACZ,YAAY,CAACa,OAAO,EAAGC,KAAK,IAAK;MAAK;MAC3CA,KAAK,CAACC,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC,CACDH,OAAO,CAACZ,YAAY,CAACgB,SAAS,EAAE,CAACF,KAAK,EAAEG,MAAM,KAAK;MAAI;MACpDH,KAAK,CAACC,MAAM,GAAG,OAAO;MACtBD,KAAK,GAAG,CAACG,MAAM,CAACC,OAAO,CAAC;IAC5B,CAAC,CAAC,CACDN,OAAO,CAACZ,YAAY,CAACmB,QAAQ,EAAGL,KAAK,IAAK;MAAI;MAC3CA,KAAK,CAACC,MAAM,GAAG,OAAO;IAC1B,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,eAAeT,aAAa,CAACc,OAAO;AACpC,OAAO,MAAMC,mBAAmB,GAAIP,KAAK,IAAKA,KAAK,CAACV,OAAO,CAACW,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}