{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst wishlist_slice = createSlice({\n  name: 'wishlist',\n  initialState: {\n    list: []\n  },\n  reducers: {\n    addProductToWishlist: (state, action) => {\n      const productInWishlist = state.list.find(el => el.id === +action.payload.id);\n      if (!productInWishlist) {\n        return [...state.list, action.payload];\n      }\n      return state;\n    }\n  }\n});\nexport default wishlist_slice.reducer;\nexport const {\n  addProductToWishlist\n} = wishlist_slice.actions;","map":{"version":3,"names":["createSlice","wishlist_slice","name","initialState","list","reducers","addProductToWishlist","state","action","productInWishlist","find","el","id","payload","reducer","actions"],"sources":["/Users/anastasiakobyzeva/Documents/GitHub/TelRan-Graduation-Redux-Project-Toolkit-Tailwind/src/store/slices/wishlist_slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst wishlist_slice = createSlice({\n    name: 'wishlist',\n    initialState: {\n        list: [],\n    },\n    reducers: {\n        addProductToWishlist: (state, action) => {\n            const productInWishlist = state.list.find(\n                (el) => el.id === +action.payload.id\n            );\n            if (!productInWishlist) {\n                return [...state.list, action.payload];\n            }\n            return state;\n        },\n    },\n})\n\nexport default wishlist_slice.reducer;\nexport const { addProductToWishlist } = wishlist_slice.actions;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,cAAc,GAAGD,WAAW,CAAC;EAC/BE,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACVC,IAAI,EAAE;EACV,CAAC;EACDC,QAAQ,EAAE;IACNC,oBAAoB,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACrC,MAAMC,iBAAiB,GAAGF,KAAK,CAACH,IAAI,CAACM,IAAI,CACpCC,EAAE,IAAKA,EAAE,CAACC,EAAE,KAAK,CAACJ,MAAM,CAACK,OAAO,CAACD,EACtC,CAAC;MACD,IAAI,CAACH,iBAAiB,EAAE;QACpB,OAAO,CAAC,GAAGF,KAAK,CAACH,IAAI,EAAEI,MAAM,CAACK,OAAO,CAAC;MAC1C;MACA,OAAON,KAAK;IAChB;EACJ;AACJ,CAAC,CAAC;AAEF,eAAeN,cAAc,CAACa,OAAO;AACrC,OAAO,MAAM;EAAER;AAAqB,CAAC,GAAGL,cAAc,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}