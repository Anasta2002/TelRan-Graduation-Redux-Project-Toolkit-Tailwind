{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { root_url } from '../../global';\nconst initialState = {\n  list: []\n};\nexport const fetchProducts = createAsyncThunk('products/fetchProducts', async id => {\n  let url = `${root_url}products/all`;\n  if (id) {\n    url = `${root_url}categories/${id}`;\n  }\n  const response = await fetch(url);\n  const data = await response.json();\n  const products = data.map(el => ({\n    ...el,\n    show_product: true\n  }));\n  return products;\n});\nconst dataProductsSlice = createSlice({\n  name: 'products',\n  initialState,\n  reducers: {\n    sortProductsAction(state, action) {\n      const {\n        sortType\n      } = action.payload;\n      switch (sortType) {\n        case 'default':\n          state.list.sort((a, b) => a.id - b.id);\n          break;\n        case 'title':\n          state.list.sort((a, b) => a.title.localeCompare(b.title));\n          break;\n        case 'price_low':\n          state.list.sort((a, b) => a.price - b.price);\n          break;\n        case 'price_high':\n          state.list.sort((a, b) => b.price - a.price);\n          break;\n        default:\n          break;\n      }\n    },\n    filterProductsAction(state, action) {\n      const {\n        minPrice,\n        maxPrice\n      } = action.payload;\n      state.list = state.list.map(product => {\n        if (product.price >= minPrice && product.price <= maxPrice) {\n          return {\n            ...product,\n            show_product: true\n          };\n        } else {\n          return {\n            ...product,\n            show_product: false\n          };\n        }\n      });\n    },\n    getCheapProductAction(state, action) {\n      const isCheap = action.payload;\n      state.list = state.list.map(product => {\n        if (isCheap && !product.discont_price) {\n          return {\n            ...product,\n            show_product: false\n          };\n        } else {\n          return {\n            ...product,\n            show_product: true\n          };\n        }\n      });\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchProducts.pending, state => {\n      //pending\n      state.status = 'loading';\n    }).addCase(fetchProducts.fulfilled, (state, action) => {\n      //success\n      state.status = 'ready';\n      state.list = action.payload;\n    }).addCase(fetchProducts.rejected, state => {\n      //rejected\n      state.status = 'error';\n    });\n  }\n});\nexport default dataProductsSlice.reducer;\nexport const {\n  sortProductsAction,\n  filterProductsAction,\n  getCheapProductAction\n} = dataProductsSlice.actions;\nexport const selectProductsStatus = state => state.products.status;","map":{"version":3,"names":["createAsyncThunk","createSlice","root_url","initialState","list","fetchProducts","id","url","response","fetch","data","json","products","map","el","show_product","dataProductsSlice","name","reducers","sortProductsAction","state","action","sortType","payload","sort","a","b","title","localeCompare","price","filterProductsAction","minPrice","maxPrice","product","getCheapProductAction","isCheap","discont_price","extraReducers","builder","addCase","pending","status","fulfilled","rejected","reducer","actions","selectProductsStatus"],"sources":["/Users/anastasiakobyzeva/Documents/GitHub/TelRan-Graduation-Redux-Project-Toolkit-Tailwind/src/store/slices/data_products_slice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { root_url } from '../../global'\n\nconst initialState = {\n    list: [],\n}\n\nexport const fetchProducts = createAsyncThunk(\n    'products/fetchProducts',\n    async (id) => {\n        let url = `${root_url}products/all`;\n        if (id) {\n            url = `${root_url}categories/${id}`;\n        }\n        const response = await fetch(url);\n        const data = await response.json();\n        const products = data.map(el => ({...el, show_product: true}))\n        return products;\n    }\n)\n\nconst dataProductsSlice = createSlice({\n    name: 'products',\n    initialState,\n    reducers: {\n        sortProductsAction(state, action) {\n            const { sortType } = action.payload;\n            switch (sortType) {\n                case 'default':\n                    state.list.sort((a, b) => a.id - b.id);\n                    break;\n                case 'title':\n                    state.list.sort((a, b) => a.title.localeCompare(b.title));\n                    break;\n                case 'price_low':\n                    state.list.sort((a, b) => a.price - b.price);\n                    break;\n                case 'price_high':\n                    state.list.sort((a, b) => b.price - a.price);\n                    break;\n                default:\n                    break;\n            }\n        },\n        filterProductsAction(state, action) {\n            const { minPrice, maxPrice } = action.payload;\n            state.list = state.list.map((product) => {\n                if (product.price >= minPrice && product.price <= maxPrice) {\n                    return { ...product, show_product: true };\n                } else {\n                    return { ...product, show_product: false };\n                }\n            });\n        },\n        getCheapProductAction(state, action) {\n            const isCheap = action.payload;\n            state.list = state.list.map((product) => {\n                if (isCheap && !product.discont_price) {\n                    return { ...product, show_product: false };\n                } else {\n                    return { ...product, show_product: true };\n                }\n            });\n        },\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchProducts.pending, (state) => {    //pending\n                state.status = 'loading'\n            })\n            .addCase(fetchProducts.fulfilled, (state, action) => {   //success\n                state.status = 'ready'\n                state.list = action.payload\n            })\n            .addCase(fetchProducts.rejected, (state) => {   //rejected\n                state.status = 'error'\n            })\n    }\n})\n\nexport default dataProductsSlice.reducer;\nexport const { sortProductsAction, filterProductsAction, getCheapProductAction } = dataProductsSlice.actions;\nexport const selectProductsStatus = (state) => state.products.status;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}