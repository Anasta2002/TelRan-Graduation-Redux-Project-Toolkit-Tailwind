{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { root_url } from '../global';\nconst initialState = {\n  list: []\n};\nexport const fetchUsers = createAsyncThunk('Users/fetchUsers', async () => {\n  const response = await fetch(`${root_url}products/${id}`);\n  const data = await response.json();\n  return data.users;\n});\nconst user_slice = createSlice({\n  name: 'products',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchUsers.pending, state => {\n      //pending\n      state.status = 'loading';\n    }).addCase(fetchUsers.fulfilled, (state, action) => {\n      //success\n      state.status = 'ready';\n      state.list = action.payload;\n    }).addCase(fetchUsers.rejected, state => {\n      //rejected\n      state.status = 'error';\n    });\n  }\n});\nexport default user_slice;","map":{"version":3,"names":["createAsyncThunk","createSlice","root_url","initialState","list","fetchUsers","response","fetch","id","data","json","users","user_slice","name","reducers","extraReducers","builder","addCase","pending","state","status","fulfilled","action","payload","rejected"],"sources":["/Users/anastasiakobyzeva/Desktop/ReactTest/ProjectTelRun/2808nelly/src/store/slices/user_slice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { root_url } from '../global'\n\nconst initialState = {\n    list: [],\n}\n\nexport const fetchUsers = createAsyncThunk(\n    'Users/fetchUsers',\n    async () => {\n        const response = await fetch(`${root_url}products/${id}`);\n        const data = await response.json();\n        return data.users;\n    }\n)\n\nconst user_slice = createSlice({\n    name: 'products',\n    initialState,\n    reducers: {\n\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchUsers.pending, (state) => {    //pending\n                state.status = 'loading'\n            })\n            .addCase(fetchUsers.fulfilled, (state, action) => {   //success\n                state.status = 'ready'\n                state.list = action.payload\n            })\n            .addCase(fetchUsers.rejected, (state) => {   //rejected\n                state.status = 'error'\n            })\n    },\n})\n\nexport default user_slice;"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,SAASC,QAAQ,QAAQ,WAAW;AAEpC,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAE;AACV,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGL,gBAAgB,CACtC,kBAAkB,EAClB,YAAY;EACR,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,QAAS,YAAWM,EAAG,EAAC,CAAC;EACzD,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI,CAACE,KAAK;AACrB,CACJ,CAAC;AAED,MAAMC,UAAU,GAAGX,WAAW,CAAC;EAC3BY,IAAI,EAAE,UAAU;EAChBV,YAAY;EACZW,QAAQ,EAAE,CAEV,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACZ,UAAU,CAACa,OAAO,EAAGC,KAAK,IAAK;MAAK;MACzCA,KAAK,CAACC,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC,CACDH,OAAO,CAACZ,UAAU,CAACgB,SAAS,EAAE,CAACF,KAAK,EAAEG,MAAM,KAAK;MAAI;MAClDH,KAAK,CAACC,MAAM,GAAG,OAAO;MACtBD,KAAK,CAACf,IAAI,GAAGkB,MAAM,CAACC,OAAO;IAC/B,CAAC,CAAC,CACDN,OAAO,CAACZ,UAAU,CAACmB,QAAQ,EAAGL,KAAK,IAAK;MAAI;MACzCA,KAAK,CAACC,MAAM,GAAG,OAAO;IAC1B,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,eAAeR,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}