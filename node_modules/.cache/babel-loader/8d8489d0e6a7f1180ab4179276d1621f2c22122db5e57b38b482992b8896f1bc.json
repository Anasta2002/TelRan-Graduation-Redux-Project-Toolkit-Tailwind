{"ast":null,"code":"var _jsxFileName = \"/Users/anastasiakobyzeva/Documents/GitHub/TelRan-Graduation-Redux-Project-Toolkit-Tailwind/src/components/UI/Search/Search.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport SearchIcon from '../../../assets/icons/Search';\nimport { Context } from '../../../context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Search() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const {\n    products\n  } = useContext(Context);\n  const handleSearch = () => {\n    // Здесь вы можете выполнить логику поиска на вашем сайте.\n    // Например, запрос к серверу или поиск в локальных данных.\n\n    // В этом примере, предположим, у вас есть массив данных `allData`,\n    // и вы хотите найти совпадения по запросу `query`.\n    const filteredResults = products.filter(item => item.name.toLowerCase().includes(query.toLowerCase()));\n    setSearchResults(filteredResults);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search...\",\n      value: query,\n      onChange: e => setQuery(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: searchResults.map(result => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: result.name\n      }, result.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"XzQk+boiZayqTnnWXi2b5wBs1Wc=\");\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useContext","useState","SearchIcon","Context","jsxDEV","_jsxDEV","Search","_s","query","setQuery","searchResults","setSearchResults","products","handleSearch","filteredResults","filter","item","name","toLowerCase","includes","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","result","id","_c","$RefreshReg$"],"sources":["/Users/anastasiakobyzeva/Documents/GitHub/TelRan-Graduation-Redux-Project-Toolkit-Tailwind/src/components/UI/Search/Search.jsx"],"sourcesContent":["import React, { useContext, useState } from 'react'\nimport SearchIcon from '../../../assets/icons/Search';\nimport { Context } from '../../../context';\n\nexport default function Search() {\n    const [query, setQuery] = useState('');\n    const [searchResults, setSearchResults] = useState([]);\n  \n    const { products } = useContext(Context)\n\n    const handleSearch = () => {\n\n      // Здесь вы можете выполнить логику поиска на вашем сайте.\n      // Например, запрос к серверу или поиск в локальных данных.\n  \n      // В этом примере, предположим, у вас есть массив данных `allData`,\n      // и вы хотите найти совпадения по запросу `query`.\n      const filteredResults = products.filter(item =>\n        item.name.toLowerCase().includes(query.toLowerCase())\n      );\n  \n      setSearchResults(filteredResults);\n    };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={e => setQuery(e.target.value)}\n      />\n      <button onClick={handleSearch}>\n        <SearchIcon />\n      </button>\n\n      <div>\n        {searchResults.map(result => (\n          <div key={result.id}>{result.name}</div>\n        ))}\n      </div>\n    </div>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAOC,UAAU,MAAM,8BAA8B;AACrD,SAASC,OAAO,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAM;IAAEW;EAAS,CAAC,GAAGZ,UAAU,CAACG,OAAO,CAAC;EAExC,MAAMU,YAAY,GAAGA,CAAA,KAAM;IAEzB;IACA;;IAEA;IACA;IACA,MAAMC,eAAe,GAAGF,QAAQ,CAACG,MAAM,CAACC,IAAI,IAC1CA,IAAI,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACX,KAAK,CAACU,WAAW,CAAC,CAAC,CACtD,CAAC;IAEDP,gBAAgB,CAACG,eAAe,CAAC;EACnC,CAAC;EAEH,oBACET,OAAA;IAAAe,QAAA,gBACEf,OAAA;MACEgB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,WAAW;MACvBC,KAAK,EAAEf,KAAM;MACbgB,QAAQ,EAAEC,CAAC,IAAIhB,QAAQ,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,eACFzB,OAAA;MAAQ0B,OAAO,EAAElB,YAAa;MAAAO,QAAA,eAC5Bf,OAAA,CAACH,UAAU;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eAETzB,OAAA;MAAAe,QAAA,EACGV,aAAa,CAACsB,GAAG,CAACC,MAAM,iBACvB5B,OAAA;QAAAe,QAAA,EAAsBa,MAAM,CAAChB;MAAI,GAAvBgB,MAAM,CAACC,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAoB,CACxC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACvB,EAAA,CAvCuBD,MAAM;AAAA6B,EAAA,GAAN7B,MAAM;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}